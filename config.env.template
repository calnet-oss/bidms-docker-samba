# user-defined container bridged network name
NETWORK=bidms_nw

AD_DOMAIN=example
AD_REALM=${AD_DOMAIN}.com
AD_DC_HOSTNAME=dc1
CONTAINER_IP4_ADDR=192.168.16.2

# In the container the AD ports are 636 and 389 but we use Docker port
# redirection to redirect the container ports to host ports.  Because of how
# AD referrals work, this should really remain ports 636 and 389 on the
# local side unless you're positive referrals aren't going to come into play
# for you.
LOCAL_DIR_SSL_PORT=636
LOCAL_DIR_PORT=389

# The location on the host to store the Samba server files
# This is the /var/lib/samba volume within the container.
HOST_SAMBA_DIRECTORY=/tmp/samba

# The location on the host to store the Samba sam.ldb.d database files. 
# Within the container, this is /var/lib/samba/private/sam.ldb.d.
# If this is not set or equals ${HOST_SAMBA_DIRECTORY}/private/sam.ldb.d,
# then this will not be mounted as a separate volume by runContainer.sh.
#HOST_SAMBA_LDB_DIRECTORY=${HOST_SAMBA_DIRECTORY}/private/sam.ldb.d

AD_BASE="dc=${AD_DOMAIN},dc=com"

# When using the LMDB storage backend, this is the maximum size of the AD
# backend storage database.
BACKEND_STORE_SIZE=4Gb

# Uncomment if you do not want to set the domain Administrator while
# building the image with buildImage.sh.  If you skip this, you should set
# the password manually the first time you run the container so you're not
# running with the publicly known default password.
# Do this with:
# samba-tool user setpassword Administrator
#SKIP_ADMIN_PASSWORD_CHANGE=1

# Uncomment if you want to use buildah/podman instead of docker
#BUILDTIME_CMD=buildah
#RUNTIME_CMD=podman

# Samba almost certainly will not run properly without running as a privileged container
USE_SUDO=1
